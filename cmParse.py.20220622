#!/usr/bin/env python3
# -*- coding:utf-8 -*-
# Author:haojian
# File Name: cmParse.py
# Created Time: 2022/6/8 10:07:46
# cm文件位置：/data/esbftp/cm/4G/NOKIA/OMC4/CM/actual_export_RESULT_2022-06-08.xml


import os,sys
import logging
from logging.handlers import RotatingFileHandler
import xml.etree.ElementTree as ET
import datetime

os.chdir(sys.path[0])
#assert ('linux' in sys.platform), '该代码只能在 Linux 下执行'

#handler = RotatingFileHandler('cmParse.log',maxBytes = 100*1024*1024,backupCount = 3)
handler = logging.FileHandler('/home/nokia/shell/log/cmParse_'+datetime.datetime.now().strftime("%Y%m%d")+'.log')
#handler.setLevel(logging.INFO)
handler.setFormatter(logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s'))
console = logging.StreamHandler()
#console.setLevel(logging.INFO)
logger = logging.getLogger(__name__)
logger.setLevel(level = logging.INFO)
logger.addHandler(handler)
#logger.addHandler(console)


def deal_with_file(xmlName,xmlCache,omc):
    xmlCache=''
    with open(xmlName,encoding='utf8') as f:
        while True:
            txtCache=f.read(1000)
            if txtCache == '':
                break
            xmlCache+=txtCache
            while True:
                if '<managedObject' not in xmlCache:
                    break
                xmlCache=xmlCache[xmlCache.find('<managedObject'):]
                if '/>' in xmlCache and '>' not in xmlCache[:xmlCache.find('/>')]:
                    xmltext=xmlCache[:xmlCache.find('/>')+2]
                    xmlCache=xmlCache[xmlCache.find('/>')+2:]
                elif '</managedObject>' in xmlCache:
                    xmltext=xmlCache[:xmlCache.find('</managedObject>')+16]
                    xmlCache=xmlCache[xmlCache.find('</managedObject>')+16:]
                else:
                    break
                root = ET.fromstring(xmltext) 
                if root.attrib['class'] == 'LNCEL':
                    logger.info(root.attrib['class']+'\t'+root.attrib['distName'])
                    cell=dict()
                    for p in list(root):
                        if p.tag=='list' and p.attrib['name']=='furtherPlmnIdL':
                            cell['share']='1'
                        elif p.tag=='p':
                            cell[p.attrib['name']]=p.text
                    if 'lcrId' in cell:
                        csvList.append([root.attrib['distName'],root.attrib['version'],cell.get('share','0'),cell.get('cellTechnology','0'),cell.get('name',''),cell.get('cellName',''),cell.get('lcrId',''),cell.get('eutraCelId',''),omc])

if __name__ == '__main__':
    csvList=[['distName','version','share','cellTechnology','name','cellName','lcrId','eutraCelId','omc']]
    for i in [p for p in os.scandir('/data/esbftp/cm/4G/NOKIA/') if p.is_dir()]:
        omc=i.name
        xmlList=[j for j in os.scandir(os.path.join(i.path,'CM'))]
        #xmlList=[j for j in os.scandir('/data/esbftp/cm/4G/NOKIA/OMC1/CM')]
        xmlList.sort(key=lambda p:p.name)
        logger.info(xmlList[-1].path)
        deal_with_file(xmlList[-1].path,csvList,omc)
    csvName='nokiaCm_'+datetime.datetime.now().strftime("%Y%m%d%H")+'.csv'
    with open(csvName+'.tmp','w') as f:
        f.write('\n'.join(['|'.join(i) for i in csvList]))
    os.remove(csvName) if os.path.isfile(csvName) else None
    os.rename(csvName+'.tmp',csvName)

